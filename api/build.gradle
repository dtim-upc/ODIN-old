plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonarqube' version '3.3'
	id 'jacoco'
}


apply plugin: 'checkstyle'
//apply plugin: 'jacoco'

group = 'edu.upc.essi.dtim'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
	}

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//	Auth dependencies
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.auth0:java-jwt:4.0.0'
//	implementation 'org.springframework.security.oauth:spring-security-oauth2'
//	implementation 'org.springframework.security:spring-security-jwt'

	implementation group: 'org.apache.jena', name: 'apache-jena-libs', version: '4.1.0', ext: 'pom'
	implementation group: 'org.apache.jena', name: 'jena-querybuilder', version: '4.1.0'
	implementation group: 'net.minidev', name: 'json-smart', version: '2.4.7'
	implementation (group: 'org.apache.spark', name: 'spark-sql_2.12',version: '3.2.1'){
		exclude group: 'org.codehaus.janino', module: 'janino'
		exclude group: 'org.codehaus.janino', module: 'commons-compiler'
	}
	implementation group: 'org.codehaus.janino', name: 'janino', version: '3.0.8'
	implementation group: 'org.codehaus.janino', name: 'commons-compiler', version: '3.0.8'

	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'



	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	checkstyle 'com.puppycrawl.tools:checkstyle:8.39'

	implementation 'edu.upc.essi.dtim:nextiadi:0.1.0-SNAPSHOT'
	implementation 'edu.upc.essi.dtim:nextiaqr:0.1.0-SNAPSHOT'
	implementation 'edu.upc.essi.dtim:nextiacore:0.0.1-SNAPSHOT'
//	implementation fileTree(dir: 'lib', include: ['*.jar'])
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	dependsOn test
}


//test.finalizedBy jacocoTestReport

sonarqube {
	properties {
		property "sonar.projectKey", "dtim-upc_newODIN"
		property "sonar.organization", "dtim"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.exclusions", "src/main/java/edu/upc/essi/dtim/ODINBackend/config/Namespaces.java"
	}
}

//checkstyle {
////	toolVersion = '5.16.1'
////	configFile = rootProject.file('config/checkstyle/google_checks.xml')
//	configDir = file('rootProject.projectDir/config/checkstyle')
//}

checkstyleMain {
	configFile = file("${rootDir}/config/checkstyle/google_checks.xml")
}

checkstyleTest {
	configFile = file("${rootDir}/config/checkstyle/google_checks.xml")
}

configurations.all {
	exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

// for snapshot dependency test
configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}