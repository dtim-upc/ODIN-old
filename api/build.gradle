plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonarqube' version '3.3'
	id 'jacoco'
}


apply plugin: 'checkstyle'
//apply plugin: 'jacoco'

group = 'edu.upc.essi.dtim'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	checkstyle 'com.puppycrawl.tools:checkstyle:8.39'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	dependsOn test
}


//test.finalizedBy jacocoTestReport

sonarqube {
	properties {
		property "sonar.projectKey", "dtim-upc_newODIN"
		property "sonar.organization", "dtim"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

//checkstyle {
////	toolVersion = '5.16.1'
////	configFile = rootProject.file('config/checkstyle/google_checks.xml')
//	configDir = file('rootProject.projectDir/config/checkstyle')
//}

checkstyleMain {
	configFile = file("${rootDir}/config/checkstyle/google_checks.xml")
}

checkstyleTest {
	configFile = file("${rootDir}/config/checkstyle/google_checks.xml")
}