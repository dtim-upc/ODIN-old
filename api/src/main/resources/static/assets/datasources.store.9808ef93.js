import{b as q,a as B,h as N,f as O,k as _,m as M,l as V,ab as W,aj as l,ak as Q,al as E,u as i,am as G,an as h}from"./index.1dc04fa4.js";var X=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},Y=q({name:"QItemLabel",props:{overline:Boolean,caption:Boolean,header:Boolean,lines:[Number,String]},setup(e,{slots:o}){const t=B(()=>parseInt(e.lines,10)),a=B(()=>"q-item__label"+(e.overline===!0?" q-item__label--overline text-overline":"")+(e.caption===!0?" q-item__label--caption text-caption":"")+(e.header===!0?" q-item__label--header":"")+(t.value===1?" ellipsis":"")),r=B(()=>e.lines!==void 0&&t.value>1?{overflow:"hidden",display:"-webkit-box","-webkit-box-orient":"vertical","-webkit-line-clamp":t.value}:null);return()=>N("div",{style:r.value,class:a.value},O(o.default))}}),Z=q({name:"QPage",props:{padding:Boolean,styleFn:Function},setup(e,{slots:o}){const{proxy:{$q:t}}=M(),a=_(V);_(W,()=>{console.error("QPage needs to be child of QPageContainer")});const r=B(()=>{const c=(a.header.space===!0?a.header.size:0)+(a.footer.space===!0?a.footer.size:0);if(typeof e.styleFn=="function"){const m=a.isContainer.value===!0?a.containerHeight.value:t.screen.height;return e.styleFn(c,m)}return{minHeight:a.isContainer.value===!0?a.containerHeight.value-c+"px":t.screen.height===0?c!==0?`calc(100vh - ${c}px)`:"100vh":t.screen.height-c+"px"}}),u=B(()=>`q-page${e.padding===!0?" q-layout-padding":""}`);return()=>N("main",{class:u.value,style:r.value},O(o.default))}}),g={getAll(e,o){return l.get("/project/"+e+"/datasources",{headers:{Authorization:`Bearer ${o}`}})},createDSPersistent(e,o,t){return l.post("/project/"+e+"/datasources/persist",o,{headers:{Authorization:`Bearer ${t}`}})},deleteDS(e,o,t){return l.delete("/project/"+e+"/datasources/"+o,{headers:{Authorization:`Bearer ${t}`}})},getTriples(e,o,t){return l.get("/project/"+e+"/datasources/triples/"+o,{headers:{Authorization:`Bearer ${t}`}})},getAllTemporal(e,o){return l.get("/project/"+e+"/temp/ds",{headers:{Authorization:`Bearer ${o}`}})},deleteTemporal(e,o,t){return l.delete("/project/"+e+"/temp/ds/"+o,{headers:{Authorization:`Bearer ${t}`}})},createDSTemp(e,o,t){return l.post("/project/"+e+"/temp/ds",t,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${o}`}})},downloadSourceGraph(e,o,t){return l.get("/project/"+e+"/datasources/download/sourcegraph",{headers:{Authorization:`Bearer ${t}`},params:{dsID:o},responseType:"blob"})},downloadProjectGraph(e,o){return l.get("/project/"+e+"/integration/download/projectschema",{headers:{Authorization:`Bearer ${o}`},responseType:"blob"})}},k={integrate(e,o,t){return l.post("/project/"+e+"/integration",o,{headers:{Authorization:`Bearer ${t}`}})},finishIntegration(e,o){return l.post("/project/"+e+"/integration/persist",null,{headers:{Authorization:`Bearer ${o}`}})},surveyAlignments(e,o,t){return l.post("/project/"+e+"/integration/survey",o,{headers:{"Content-Type":"text/plain",Authorization:`Bearer ${t}`}})},downloadSourceGraph(e,o,t){return l.get("/project/"+e+"/integration/download/sourcegraph",{headers:{Authorization:`Bearer ${t}`},params:{dsID:o},responseType:"blob"})}},H={exports:{}};(function(e,o){(function(t,a){e.exports=a()})(X,function(){return function t(a,r,u){var c=window,m="application/octet-stream",S=u||m,n=a,v=!r&&!u&&n,d=document.createElement("a"),x=function(s){return String(s)},p=c.Blob||c.MozBlob||c.WebKitBlob||x,w=r||"download",f,I;if(p=p.call?p.bind(c):Blob,String(this)==="true"&&(n=[n,S],S=n[0],n=n[1]),v&&v.length<2048&&(w=v.split("/").pop().split("?")[0],d.href=v,d.href.indexOf(v)!==-1)){var j=new XMLHttpRequest;return j.open("GET",v,!0),j.responseType="blob",j.onload=function(s){t(s.target.response,w,m)},setTimeout(function(){j.send()},0),j}if(/^data:([\w+-]+\/[\w+.-]+)?[,;]/.test(n))if(n.length>1024*1024*1.999&&p!==x)n=z(n),S=n.type||m;else return navigator.msSaveBlob?navigator.msSaveBlob(z(n),w):T(n);else if(/([\x80-\xff])/.test(n)){var b=0,P=new Uint8Array(n.length),F=P.length;for(b;b<F;++b)P[b]=n.charCodeAt(b);n=new p([P],{type:S})}f=n instanceof p?n:new p([n],{type:S});function z(s){var y=s.split(/[:;,]/),D=y[1],K=y[2]=="base64"?atob:decodeURIComponent,L=K(y.pop()),R=L.length,A=0,U=new Uint8Array(R);for(A;A<R;++A)U[A]=L.charCodeAt(A);return new p([U],{type:D})}function T(s,y){if("download"in d)return d.href=s,d.setAttribute("download",w),d.className="download-js-link",d.innerHTML="downloading...",d.style.display="none",document.body.appendChild(d),setTimeout(function(){d.click(),document.body.removeChild(d),y===!0&&setTimeout(function(){c.URL.revokeObjectURL(d.href)},250)},66),!0;if(/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent))return/^data:/.test(s)&&(s="data:"+s.replace(/^data:([\w\/\-\+]+)/,m)),window.open(s)||confirm(`Displaying New Document

Use Save As... to download, then click back to return to this page.`)&&(location.href=s),!0;var D=document.createElement("iframe");document.body.appendChild(D),!y&&/^data:/.test(s)&&(s="data:"+s.replace(/^data:([\w\/\-\+]+)/,m)),D.src=s,setTimeout(function(){document.body.removeChild(D)},333)}if(navigator.msSaveBlob)return navigator.msSaveBlob(f,w);if(c.URL)T(c.URL.createObjectURL(f),!0);else{if(typeof f=="string"||f.constructor===x)try{return T("data:"+S+";base64,"+c.btoa(f))}catch{return T("data:"+S+","+encodeURIComponent(f))}I=new FileReader,I.onload=function(s){T(this.result)},I.readAsDataURL(f)}return!0}})})(H);var $=H.exports;const C=Q("integration",{state:()=>({project:{},projectTemporal:{},datasources:[],selectedDS:[],alignments:[]}),getters:{getDatasourcesNumber(e){return e.datasources.length},getSourceB(e){return e.selectedDS.length==1?e.selectedDS[0]:null},getGraphicalA(e){return e.project.graphicalGlobalSchema},getGraphicalB(e){return e.selectedDS.length==1?e.selectedDS[0].graphicalSchema:""},getGlobalSchema(e){return e.projectTemporal.graphicalGlobalSchema?e.projectTemporal.graphicalGlobalSchema:""},getGraphicalSchemaIntegration(e){return e.projectTemporal.graphicalSchemaIntegration?e.projectTemporal.graphicalSchemaIntegration:""},isDSEmpty(e){return e.datasources.length==0}},actions:{async init(){},async setProject(e){const o=E(),t=i();if(console.log("setting project to integration store.."),e)this.project=e;else if(!this.project.name){const a=await G.getProjectByID(o.params.id,t.user.accessToken);a.status==200&&(this.project=a.data)}t.user.accessToken&&(console.log("retrieving temporal data sources..."),this.getTemporalDatasources(),this.alignments=[])},deleteTemporalDS(e){const o=h(),t=i();g.deleteTemporal(this.project.id,e.id,t.user.accessToken).then(a=>{if(console.log("delete ds temporal"),console.log(a.data),a.status==204){let r=this.datasources.indexOf(e);r>-1?(console.log("dele index"),this.datasources.splice(r,1)):console.log("something wrong, could not find data source in array to delete it"),this.selectedDS.length>0&&this.selectedDS[0].id===e.id&&(console.log("data source deleter from selection"),this.selectedDS=[])}else console.log("check status!!! something wrong: ",a)}).catch(a=>{console.log("error deleting data sources"),console.log(a),o.negative("Error deleting data source")})},async getTemporalDatasources(){const e=h(),o=i();console.log("Pinia getting temporal data sources..."),await g.getAllTemporal(this.project.id,o.user.accessToken).then(t=>{console.log("ds temporal received",t),t.data===""?this.datasources=[]:this.datasources=t.data}).catch(t=>{console.log("error retrieving data sources"),console.log(t),e.negative("Cannot conect to the server.")})},addDataSource(e,o,t){const a=h(),r=i();console.log("adding data source...",o),g.createDSTemp(e,r.user.accessToken,o).then(u=>{console.log("createDSTemp()",u),u.status==201?(this.datasources.push(u.data),t(u.data)):a.negative("Cannot create datasource. Something went wrong in the server.")}).catch(u=>{console.log("error addding ds: ",u),a.negative("Something went wrong in the server.")})},addSelectedDatasource(e){this.selectedDS=[],this.selectedDS.push(e)},deleteSelectedDatasource(e){console.log("deleteselect: ",e),console.log("sources ; ",this.selectedDS);let o=this.selectedDS.indexOf(e);o>-1?(console.log("dele index"),this.selectedDS.splice(o,1)):this.selectedDS=this.selectedDS.filter(t=>t.id!=e.id)},finishIntegration(e){this.deleteSelectedDatasource(e);let o=this.datasources.indexOf(e);o>-1?(console.log("dele index"),this.datasources.splice(o,1)):console.log("something wrong, could not find data source in array to delete it")},addAligment(e,o){console.log("alignment store: ",e);let t={};o?(t.iriA=e.resourceA.iri,t.labelA=e.resourceA.label,t.iriB=e.resourceB.iri,t.labelB=e.resourceB.label,t.l=e.integratedLabel,t.type=e.type):t=e,this.alignments.push(t)},integrateTemporal(e){const o=i(),t=h();var a={dsB:this.selectedDS[0],alignments:this.alignments};k.integrate(this.project.id,a,o.user.accessToken).then(r=>{console.log("integration response...",r),r.status==201||r.status?(t.positive("Integration succeeded"),this.projectTemporal=r.data,e&&e()):t.negative("There was an error for the integration task")}).catch(r=>{console.log("error integrating ds"),t.negative("Something went wrong in the server. No possible to integrate it")})},saveIntegration(e){const o=i(),t=h();console.log("save intregration store...",o.user.accessToken),console.log("project id ",this.project.id),k.finishIntegration(this.project.id,o.user.accessToken).then(a=>{console.log("integration response...",a),a.status==200?(e&&e(this.selectedDS[0]),t.positive("Integration saved successfully")):t.negative("There was an error to save the integration")}).catch(a=>{console.log("error saving integration",a),t.negative("Something went wrong in the server. No possible to save integration")})},deleteAligment(e){console.log("aligment is ",e);let o=this.alignments.indexOf(e);console.log("index is ",o),this.alignments.splice(o,1)},getAlignmentsSurvey(){console.log("getting alignments survey....",this.selectedDS[0].id);const e=i(),o=h();k.surveyAlignments(this.project.id,this.selectedDS[0].id,e.user.accessToken).then(t=>{console.log("survey alignments response...",t),t.status==200&&(this.alignments=t.data)}).catch(t=>{console.log("error alignments survye ",t),o.negative("Something went wrong in the server.")})},async downloadSourceTemporal(e){console.log("download....",e);const o=i(),t=await k.downloadSourceGraph(this.project.id,e,o.user.accessToken),a=t.headers["content-type"];$(t.data,"source_graph.ttl",a)}}}),ee=Q("datasource",{state:()=>({project:{},datasources:[]}),getters:{getDatasourcesNumber(e){return e.datasources.length},getGlobalSchema(e){return e.project.graphicalGlobalSchema?e.project.graphicalGlobalSchema:""},getGraphicalSchemaIntegration(e){return e.project.graphicalSchemaIntegration?e.project.graphicalSchemaIntegration:""}},actions:{async init(){},async setProject(e){const o=E(),t=i(),a=C();if(console.log("setting project to datasources store",e),e)console.log("if proj"),this.project=e,a.setProject(e);else if(!this.project.name||this.project.id!=o.params.id){console.log("dfs",o.params.id);const r=await G.getProjectByID(o.params.id,t.user.accessToken);r.status==200&&(this.project=r.data,a.setProject(this.project))}return t.user.accessToken&&(console.log("retrieving persistent data sources..."),this.getDatasources()),this.project},async getTriples(e,o){const t=i();return(await g.getTriples(e.id,o,t.user.accessToken)).data},async updateProjectInfo(){console.log("updating project info");const e=i(),o=C(),t=await G.getProjectByID(this.project.id,e.user.accessToken);t.status==200&&(this.project=t.data,o.setProject(this.project))},async getDatasources(){const e=h(),o=i();console.log("Pinia getting data sources..."),await g.getAll(this.project.id,o.user.accessToken).then(t=>{console.log("ds received",t.data),t.data===""?this.datasources=[]:this.datasources=t.data,console.log(this.datasources)}).catch(t=>{console.log("error retrieving data sources"),console.log(t),e.negative("Cannot conect to the server.")})},persistDataSource(e){const o=h(),t=i(),a=C();console.log("persist data source...",e),g.createDSPersistent(this.project.id,e,t.user.accessToken).then(r=>{console.log("createPersistentDS()",r),r.status==201?(this.datasources.push(r.data),a.finishIntegration(e),this.updateProjectInfo(),this.router.go(-1)):o.negative("Cannot integrate datasource with project. Something went wrong in the server.")}).catch(r=>{console.log("error integrating ds with project: ",r),o.negative("Something went wrong in the server.")})},deleteDataSource(e){const o=i(),t=h();g.deleteDS(this.project.id,e.id,o.user.accessToken).then(a=>{if(a.status==204){t.positive("Successfully deleted");let r=this.datasources.indexOf(e);r>-1&&(console.log("dele index"),this.datasources.splice(r,1)),this.updateProjectInfo()}else t.negative("Something went wrong in the server.")}).catch(a=>{console.log("error deleting data sources"),console.log(a),t.negative("Cannot delete data source. Error in the server.")})},async downloadSource(e){console.log("download....",e);const o=i(),t=await g.downloadSourceGraph(this.project.id,e,o.user.accessToken),a=t.headers["content-type"];$(t.data,"prueba.ttl",a)},async downloadProjectS(){console.log("download project....");const e=i(),o=await g.downloadProjectGraph(this.project.id,e.user.accessToken),t=o.headers["content-type"];$(o.data,"source_graph.ttl",t)}}});export{Z as Q,C as a,Y as b,ee as u};
