import{b as _,a as B,h as q,f as O,k as U,m as M,l as V,ab as W,ai as u,aj as Q,ak as E,u as c,al as G,am as h}from"./index.aea0cc93.js";var X=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},Y=_({name:"QItemLabel",props:{overline:Boolean,caption:Boolean,header:Boolean,lines:[Number,String]},setup(e,{slots:o}){const t=B(()=>parseInt(e.lines,10)),a=B(()=>"q-item__label"+(e.overline===!0?" q-item__label--overline text-overline":"")+(e.caption===!0?" q-item__label--caption text-caption":"")+(e.header===!0?" q-item__label--header":"")+(t.value===1?" ellipsis":"")),r=B(()=>e.lines!==void 0&&t.value>1?{overflow:"hidden",display:"-webkit-box","-webkit-box-orient":"vertical","-webkit-line-clamp":t.value}:null);return()=>q("div",{style:r.value,class:a.value},O(o.default))}}),Z=_({name:"QPage",props:{padding:Boolean,styleFn:Function},setup(e,{slots:o}){const{proxy:{$q:t}}=M(),a=U(V);U(W,()=>{console.error("QPage needs to be child of QPageContainer")});const r=B(()=>{const i=(a.header.space===!0?a.header.size:0)+(a.footer.space===!0?a.footer.size:0);if(typeof e.styleFn=="function"){const f=a.isContainer.value===!0?a.containerHeight.value:t.screen.height;return e.styleFn(i,f)}return{minHeight:a.isContainer.value===!0?a.containerHeight.value-i+"px":t.screen.height===0?i!==0?`calc(100vh - ${i}px)`:"100vh":t.screen.height-i+"px"}}),d=B(()=>`q-page${e.padding===!0?" q-layout-padding":""}`);return()=>q("main",{class:d.value,style:r.value},O(o.default))}}),S={getAll(e,o){return u.get("/project/"+e+"/datasources",{headers:{Authorization:`Bearer ${o}`}})},createDSPersistent(e,o,t){return u.post("/project/"+e+"/datasources/persist",o,{headers:{Authorization:`Bearer ${t}`}})},deleteDS(e,o,t){return u.delete("/project/"+e+"/datasources/"+o,{headers:{Authorization:`Bearer ${t}`}})},getAllTemporal(e,o){return u.get("/project/"+e+"/temp/ds",{headers:{Authorization:`Bearer ${o}`}})},deleteTemporal(e,o,t){return u.delete("/project/"+e+"/temp/ds/"+o,{headers:{Authorization:`Bearer ${t}`}})},createDSTemp(e,o,t){return u.post("/project/"+e+"/temp/ds",t,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${o}`}})},downloadSourceGraph(e,o,t){return u.get("/project/"+e+"/datasources/download/sourcegraph",{headers:{Authorization:`Bearer ${t}`},params:{dsID:o},responseType:"blob"})}},x={integrate(e,o,t){return u.post("/project/"+e+"/integration",o,{headers:{Authorization:`Bearer ${t}`}})},finishIntegration(e,o){return u.post("/project/"+e+"/integration/persist",null,{headers:{Authorization:`Bearer ${o}`}})},surveyAlignments(e,o,t){return u.post("/project/"+e+"/integration/survey",o,{headers:{"Content-Type":"text/plain",Authorization:`Bearer ${t}`}})},downloadSourceGraph(e,o,t){return u.get("/project/"+e+"/integration/download/sourcegraph",{headers:{Authorization:`Bearer ${t}`},params:{dsID:o},responseType:"blob"})}},N={exports:{}};(function(e,o){(function(t,a){e.exports=a()})(X,function(){return function t(a,r,d){var i=window,f="application/octet-stream",m=d||f,n=a,v=!r&&!d&&n,l=document.createElement("a"),I=function(s){return String(s)},g=i.Blob||i.MozBlob||i.WebKitBlob||I,w=r||"download",p,k;if(g=g.call?g.bind(i):Blob,String(this)==="true"&&(n=[n,m],m=n[0],n=n[1]),v&&v.length<2048&&(w=v.split("/").pop().split("?")[0],l.href=v,l.href.indexOf(v)!==-1)){var b=new XMLHttpRequest;return b.open("GET",v,!0),b.responseType="blob",b.onload=function(s){t(s.target.response,w,f)},setTimeout(function(){b.send()},0),b}if(/^data:([\w+-]+\/[\w+.-]+)?[,;]/.test(n))if(n.length>1024*1024*1.999&&g!==I)n=$(n),m=n.type||f;else return navigator.msSaveBlob?navigator.msSaveBlob($(n),w):T(n);else if(/([\x80-\xff])/.test(n)){var j=0,P=new Uint8Array(n.length),F=P.length;for(j;j<F;++j)P[j]=n.charCodeAt(j);n=new g([P],{type:m})}p=n instanceof g?n:new g([n],{type:m});function $(s){var y=s.split(/[:;,]/),D=y[1],K=y[2]=="base64"?atob:decodeURIComponent,z=K(y.pop()),L=z.length,A=0,R=new Uint8Array(L);for(A;A<L;++A)R[A]=z.charCodeAt(A);return new g([R],{type:D})}function T(s,y){if("download"in l)return l.href=s,l.setAttribute("download",w),l.className="download-js-link",l.innerHTML="downloading...",l.style.display="none",document.body.appendChild(l),setTimeout(function(){l.click(),document.body.removeChild(l),y===!0&&setTimeout(function(){i.URL.revokeObjectURL(l.href)},250)},66),!0;if(/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent))return/^data:/.test(s)&&(s="data:"+s.replace(/^data:([\w\/\-\+]+)/,f)),window.open(s)||confirm(`Displaying New Document

Use Save As... to download, then click back to return to this page.`)&&(location.href=s),!0;var D=document.createElement("iframe");document.body.appendChild(D),!y&&/^data:/.test(s)&&(s="data:"+s.replace(/^data:([\w\/\-\+]+)/,f)),D.src=s,setTimeout(function(){document.body.removeChild(D)},333)}if(navigator.msSaveBlob)return navigator.msSaveBlob(p,w);if(i.URL)T(i.URL.createObjectURL(p),!0);else{if(typeof p=="string"||p.constructor===I)try{return T("data:"+m+";base64,"+i.btoa(p))}catch{return T("data:"+m+","+encodeURIComponent(p))}k=new FileReader,k.onload=function(s){T(this.result)},k.readAsDataURL(p)}return!0}})})(N);var H=N.exports;const C=Q("integration",{state:()=>({project:{},projectTemporal:{},datasources:[],selectedDS:[],alignments:[]}),getters:{getSourceB(e){return e.selectedDS.length==1?e.selectedDS[0]:null},getGraphicalA(e){return e.project.graphicalGlobalSchema},getGraphicalB(e){return e.selectedDS.length==1?e.selectedDS[0].graphicalSchema:""},getGlobalSchema(e){return e.projectTemporal.graphicalGlobalSchema?e.projectTemporal.graphicalGlobalSchema:""},getGraphicalSchemaIntegration(e){return e.projectTemporal.graphicalSchemaIntegration?e.projectTemporal.graphicalSchemaIntegration:""},isDSEmpty(e){return e.datasources.length==0}},actions:{async init(){},async setProject(e){const o=E(),t=c();if(console.log("setting project to integration store.."),e)this.project=e;else if(!this.project.name){const a=await G.getProjectByID(o.params.id,t.user.accessToken);a.status==200&&(this.project=a.data)}t.user.accessToken&&(console.log("retrieving temporal data sources..."),this.getTemporalDatasources(),this.alignments=[])},deleteTemporalDS(e){const o=h(),t=c();S.deleteTemporal(this.project.id,e.id,t.user.accessToken).then(a=>{if(console.log("delete ds temporal"),console.log(a.data),a.status==204){let r=this.datasources.indexOf(e);r>-1?(console.log("dele index"),this.datasources.splice(r,1)):console.log("something wrong, could not find data source in array to delete it"),this.selectedDS.length>0&&this.selectedDS[0].id===e.id&&(console.log("data source deleter from selection"),this.selectedDS=[])}else console.log("check status!!! something wrong: ",a)}).catch(a=>{console.log("error deleting data sources"),console.log(a),o.negative("Error deleting data source")})},async getTemporalDatasources(){const e=h(),o=c();console.log("Pinia getting temporal data sources..."),await S.getAllTemporal(this.project.id,o.user.accessToken).then(t=>{console.log("ds temporal received",t),t.data===""?this.datasources=[]:this.datasources=t.data}).catch(t=>{console.log("error retrieving data sources"),console.log(t),e.negative("Cannot conect to the server.")})},addDataSource(e,o,t){const a=h(),r=c();console.log("adding data source...",o),S.createDSTemp(e,r.user.accessToken,o).then(d=>{console.log("createDSTemp()",d),d.status==201?(this.datasources.push(d.data),t(d.data)):a.negative("Cannot create datasource. Something went wrong in the server.")}).catch(d=>{console.log("error addding ds: ",d),a.negative("Something went wrong in the server.")})},addSelectedDatasource(e){this.selectedDS=[],this.selectedDS.push(e)},deleteSelectedDatasource(e){console.log("deleteselect: ",e),console.log("sources ; ",this.selectedDS);let o=this.selectedDS.indexOf(e);o>-1?(console.log("dele index"),this.selectedDS.splice(o,1)):this.selectedDS=this.selectedDS.filter(t=>t.id!=e.id)},finishIntegration(e){this.deleteSelectedDatasource(e);let o=this.datasources.indexOf(e);o>-1?(console.log("dele index"),this.datasources.splice(o,1)):console.log("something wrong, could not find data source in array to delete it")},addAligment(e,o){console.log("alignment store: ",e);let t={};o?(t.iriA=e.resourceA.iri,t.labelA=e.resourceA.label,t.iriB=e.resourceB.iri,t.labelB=e.resourceB.label,t.l=e.integratedLabel,t.type=e.type):t=e,this.alignments.push(t)},integrateTemporal(e){const o=c(),t=h();var a={dsB:this.selectedDS[0],alignments:this.alignments};x.integrate(this.project.id,a,o.user.accessToken).then(r=>{console.log("integration response...",r),r.status==201||r.status?(t.positive("Integration succeeded"),this.projectTemporal=r.data,e&&e()):t.negative("There was an error for the integration task")}).catch(r=>{console.log("error integrating ds"),t.negative("Something went wrong in the server. No possible to integrate it")})},saveIntegration(e){const o=c(),t=h();console.log("save intregration store...",o.user.accessToken),console.log("project id ",this.project.id),x.finishIntegration(this.project.id,o.user.accessToken).then(a=>{console.log("integration response...",a),a.status==200?(e&&e(this.selectedDS[0]),t.positive("Integration saved successfully")):t.negative("There was an error to save the integration")}).catch(a=>{console.log("error saving integration",a),t.negative("Something went wrong in the server. No possible to save integration")})},deleteAligment(e){console.log("aligment is ",e);let o=this.alignments.indexOf(e);console.log("index is ",o),this.alignments.splice(o,1)},getAlignmentsSurvey(){console.log("getting alignments survey....",this.selectedDS[0].id);const e=c(),o=h();x.surveyAlignments(this.project.id,this.selectedDS[0].id,e.user.accessToken).then(t=>{console.log("survey alignments response...",t),t.status==200&&(this.alignments=t.data)}).catch(t=>{console.log("error alignments survye ",t),o.negative("Something went wrong in the server.")})},async downloadSourceTemporal(e){console.log("download....",e);const o=c(),t=await x.downloadSourceGraph(this.project.id,e,o.user.accessToken),a=t.headers["content-type"];H(t.data,"source_graph.ttl",a)}}}),ee=Q("datasource",{state:()=>({project:{},datasources:[]}),getters:{getGlobalSchema(e){return e.project.graphicalGlobalSchema?e.project.graphicalGlobalSchema:""},getGraphicalSchemaIntegration(e){return e.project.graphicalSchemaIntegration?e.project.graphicalSchemaIntegration:""}},actions:{async init(){},async setProject(e){const o=E(),t=c(),a=C();if(console.log("setting project to datasources store",e),e)console.log("if proj"),this.project=e,a.setProject(e);else if(!this.project.name||this.project.id!=o.params.id){const r=await G.getProjectByID(o.params.id,t.user.accessToken);r.status==200&&(this.project=r.data,a.setProject(this.project))}t.user.accessToken&&(console.log("retrieving persistent data sources..."),this.getDatasources())},async updateProjectInfo(){console.log("updating project info");const e=c(),o=C(),t=await G.getProjectByID(this.project.id,e.user.accessToken);t.status==200&&(this.project=t.data,o.setProject(this.project))},async getDatasources(){const e=h(),o=c();console.log("Pinia getting data sources..."),await S.getAll(this.project.id,o.user.accessToken).then(t=>{console.log("ds received",t.data),t.data===""?this.datasources=[]:this.datasources=t.data,console.log(this.datasources)}).catch(t=>{console.log("error retrieving data sources"),console.log(t),e.negative("Cannot conect to the server.")})},persistDataSource(e){const o=h(),t=c(),a=C();console.log("persist data source...",e),S.createDSPersistent(this.project.id,e,t.user.accessToken).then(r=>{console.log("createPersistentDS()",r),r.status==201?(this.router.push({name:"datasources"}),this.datasources.push(r.data),a.finishIntegration(e),this.updateProjectInfo()):o.negative("Cannot integrate datasource with project. Something went wrong in the server.")}).catch(r=>{console.log("error integrating ds with project: ",r),o.negative("Something went wrong in the server.")})},deleteDataSource(e){const o=c(),t=h();S.deleteDS(this.project.id,e.id,o.user.accessToken).then(a=>{if(a.status==204){t.positive("Successfully deleted");let r=this.datasources.indexOf(e);r>-1&&(console.log("dele index"),this.datasources.splice(r,1)),this.updateProjectInfo()}else t.negative("Something went wrong in the server.")}).catch(a=>{console.log("error deleting data sources"),console.log(a),t.negative("Cannot delete data source. Error in the server.")})},async downloadSource(e){console.log("download....",e);const o=c(),t=await S.downloadSourceGraph(this.project.id,e,o.user.accessToken),a=t.headers["content-type"];H(t.data,"prueba.ttl",a)}}});export{Z as Q,Y as a,ee as b,C as u};
